{"ast":null,"code":"var _jsxFileName = \"/Users/inhochoi/Downloads/Programming Project/FULL_STACK_WEB_DECAL/typescript_todolist/react_todolist/todolist/frontend/src/component/Writer.tsx\",\n  _s = $RefreshSig$();\nimport './Writer.css';\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Writer = ({\n  onCreate\n}) => {\n  _s();\n  const [textTodo, setTextTodo] = useState(\"\");\n\n  // User input todo\n  const onChangeSetTextTodo = e => {\n    setTextTodo(e.target.value);\n  };\n  const inputRef = useRef(null);\n  const onSubmit = () => {\n    console.log(\"onSubmit called with textTodo:\", textTodo); // 디버그용 로그 추가\n    // If the input is empty, can't add in the list\n    if (!textTodo) {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n      return;\n    }\n    // Create Todo\n    onCreate(textTodo);\n    // Clear Input text\n    setTextTodo(\"\");\n    // alert(\"Completely Added !\");\n  };\n\n  // Add Todo List with Enter Key\n  const onKeyDown = e => {\n    if (e.key === 'Enter') {\n      onSubmit();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Writer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add your ToDo \\u270F\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        value: textTodo,\n        onChange: onChangeSetTextTodo,\n        onKeyDown: onKeyDown,\n        placeholder: \"New Todo....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onSubmit,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Writer, \"OgwwjN/jmxN2XAoW0smF2ibkSxE=\");\n_c = Writer;\nexport default Writer;\nvar _c;\n$RefreshReg$(_c, \"Writer\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Writer","onCreate","_s","textTodo","setTextTodo","onChangeSetTextTodo","e","target","value","inputRef","onSubmit","console","log","current","focus","onKeyDown","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/inhochoi/Downloads/Programming Project/FULL_STACK_WEB_DECAL/typescript_todolist/react_todolist/todolist/frontend/src/component/Writer.tsx"],"sourcesContent":["import './Writer.css'\nimport React, {useState, useRef, ChangeEvent, KeyboardEvent} from 'react'\n\ninterface WriterProps {\n    onCreate: (content: string) => void,\n}\n\n\n\nconst Writer = ({ onCreate } : WriterProps) => {\n\n    const [textTodo, setTextTodo] = useState(\"\");\n\n    // User input todo\n    const onChangeSetTextTodo = (e: ChangeEvent<HTMLInputElement>) => {\n        setTextTodo(e.target.value);\n    };\n    \n    const inputRef =  useRef<HTMLInputElement | null>(null);\n    const onSubmit = () => {\n        console.log(\"onSubmit called with textTodo:\", textTodo); // 디버그용 로그 추가\n        // If the input is empty, can't add in the list\n        if (!textTodo) {\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n            return;\n        }\n        // Create Todo\n        onCreate(textTodo);\n        // Clear Input text\n        setTextTodo(\"\");\n        // alert(\"Completely Added !\");\n    };\n\n    // Add Todo List with Enter Key\n    const onKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            onSubmit();\n        }\n    }\n\n\n    return (\n        <div className=\"Writer\">\n            <h4>Add your ToDo ✏️</h4>\n            <div className=\"editor_wrapper\">\n                <input \n                ref={inputRef} \n                value={textTodo} \n                onChange={onChangeSetTextTodo}\n                onKeyDown={onKeyDown}\n                placeholder=\"New Todo....\" />\n                <button onClick={onSubmit}>add</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Writer;"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,MAAM,QAAmC,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQzE,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAuB,CAAC,KAAK;EAAAC,EAAA;EAE3C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMS,mBAAmB,GAAIC,CAAgC,IAAK;IAC9DF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,QAAQ,GAAIZ,MAAM,CAA0B,IAAI,CAAC;EACvD,MAAMa,QAAQ,GAAGA,CAAA,KAAM;IACnBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAET,QAAQ,CAAC,CAAC,CAAC;IACzD;IACA,IAAI,CAACA,QAAQ,EAAE;MACX,IAAIM,QAAQ,CAACI,OAAO,EAAE;QAClBJ,QAAQ,CAACI,OAAO,CAACC,KAAK,CAAC,CAAC;MAC5B;MACA;IACJ;IACA;IACAb,QAAQ,CAACE,QAAQ,CAAC;IAClB;IACAC,WAAW,CAAC,EAAE,CAAC;IACf;EACJ,CAAC;;EAED;EACA,MAAMW,SAAS,GAAIT,CAAkC,IAAK;IACtD,IAAIA,CAAC,CAACU,GAAG,KAAK,OAAO,EAAE;MACnBN,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;EAGD,oBACIX,OAAA;IAAKkB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACnBnB,OAAA;MAAAmB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBvB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BnB,OAAA;QACAwB,GAAG,EAAEd,QAAS;QACdD,KAAK,EAAEL,QAAS;QAChBqB,QAAQ,EAAEnB,mBAAoB;QAC9BU,SAAS,EAAEA,SAAU;QACrBU,WAAW,EAAC;MAAc;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7BvB,OAAA;QAAQ2B,OAAO,EAAEhB,QAAS;QAAAQ,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAApB,EAAA,CAhDKF,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAkDZ,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}